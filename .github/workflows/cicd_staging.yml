name: CICD

on:
  push:
    branches:
      - staging

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Run Jest Tests
        run: npm run test:cov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  build:
    needs: test
    runs-on: ubuntu-latest
    env:
      REGISTRY_USERNAME: ${{secrets.REGISTRY_USERNAME}}
      REGISTRY_PASSWORD: ${{secrets.REGISTRY_PASSWORD}}
      REGISTRY_HOST: ${{ secrets.REGISTRY_HOST }}
      REGISTRY_SPACE: ${{ secrets.REGISTRY_SPACE }}
      REPO_NAME: ${{ github.event.repository.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Verificar archivo Dockerfile
        run: |
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile no encontrado. No se ejecutar치 la acci칩n."
            exit 0
          fi
      - name: Autenticarse en el registry
        run: echo $REGISTRY_PASSWORD | docker login $REGISTRY_HOST -u $REGISTRY_USERNAME --password-stdin
      - name: Construir y Subir imagen de docker
        run: |
          BRANCH_NAME=$(basename $GITHUB_REF)
          IMAGE_VERSION=$(date +%s)
          sed -e "s~\${REPO_NAME}~$REPO_NAME~g" \
          -e "s~\${BRANCH_NAME}~${BRANCH_NAME}~g" \
          -e "s~\${REGISTRY_SPACE}~$REGISTRY_SPACE~g" \
          -e "s~\${IMAGE_VERSION}~${IMAGE_VERSION}~g" \
          -e "s~\${REGISTRY_HOST}~$REGISTRY_HOST~g" \
          docker_image_bash.sh > new_docker_image_bash.sh
          bash new_docker_image_bash.sh
          rm -rf new_docker_image_bash.sh
          echo "La imagen $REGISTRY_HOST/$REGISTRY_SPACE/${repo_name}-${BRANCH_NAME}:${IMAGE_VERSION} se construyo y se subi칩 exitosamente"
          echo "La imagen $REGISTRY_HOST/$REGISTRY_SPACE/${repo_name}-${BRANCH_NAME}:latest se construyo y se subi칩 exitosamente"